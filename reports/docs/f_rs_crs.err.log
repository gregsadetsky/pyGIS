Traceback (most recent call last):
  File "/home/mmann1123/miniconda3/envs/pygisbookgw/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/mmann1123/miniconda3/envs/pygisbookgw/lib/python3.9/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/mmann1123/miniconda3/envs/pygisbookgw/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/home/mmann1123/miniconda3/envs/pygisbookgw/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/home/mmann1123/miniconda3/envs/pygisbookgw/lib/python3.9/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/mmann1123/miniconda3/envs/pygisbookgw/lib/python3.9/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/mmann1123/miniconda3/envs/pygisbookgw/lib/python3.9/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt
fig, ax = plt.subplots(dpi=200)

with gw.config.update(ref_crs=4326):
    with gw.open(rgbn, nodata=0) as src:
        # replace 0 with nan
        src = src.gw.mask_nodata()
        print(src.transform)
        print(src.crs)
        print(src.resampling)
        print(src.res)
        src.sel(band=[3,2,1]).plot.imshow(robust=True, ax=ax)

plt.tight_layout(pad=1)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mRuntimeError[0m                              Traceback (most recent call last)
Cell [0;32mIn[2], line 5[0m
[1;32m      2[0m fig, ax [38;5;241m=[39m plt[38;5;241m.[39msubplots(dpi[38;5;241m=[39m[38;5;241m200[39m)
[1;32m      4[0m [38;5;28;01mwith[39;00m gw[38;5;241m.[39mconfig[38;5;241m.[39mupdate(ref_crs[38;5;241m=[39m[38;5;241m4326[39m):
[0;32m----> 5[0m     [38;5;28;01mwith[39;00m [43mgw[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m[43mrgbn[49m[43m,[49m[43m [49m[43mnodata[49m[38;5;241;43m=[39;49m[38;5;241;43m0[39;49m[43m)[49m [38;5;28;01mas[39;00m src:
[1;32m      6[0m         [38;5;66;03m# replace 0 with nan[39;00m
[1;32m      7[0m         src [38;5;241m=[39m src[38;5;241m.[39mgw[38;5;241m.[39mmask_nodata()
[1;32m      8[0m         [38;5;28mprint[39m(src[38;5;241m.[39mtransform)

File [0;32m~/miniconda3/envs/pygisbookgw/lib/python3.9/site-packages/geowombat/core/api.py:566[0m, in [0;36mopen.__init__[0;34m(self, filename, band_names, time_names, stack_dim, bounds, bounds_by, resampling, persist_filenames, netcdf_vars, mosaic, overlap, nodata, scale_factor, offset, dtype, scale_data, num_workers, **kwargs)[0m
[1;32m    563[0m             w [38;5;241m=[39m src[38;5;241m.[39mblock_window([38;5;241m1[39m, [38;5;241m0[39m, [38;5;241m0[39m)
[1;32m    564[0m             kwargs[[38;5;124m'[39m[38;5;124mchunks[39m[38;5;124m'[39m] [38;5;241m=[39m (band_chunks, w[38;5;241m.[39mheight, w[38;5;241m.[39mwidth)
[0;32m--> 566[0m     [38;5;28mself[39m[38;5;241m.[39mdata [38;5;241m=[39m [43mwarp_open[49m[43m([49m
[1;32m    567[0m [43m        [49m[43mfilename[49m[43m,[49m
[1;32m    568[0m [43m        [49m[43mband_names[49m[38;5;241;43m=[39;49m[43mband_names[49m[43m,[49m
[1;32m    569[0m [43m        [49m[43mresampling[49m[38;5;241;43m=[39;49m[43mresampling[49m[43m,[49m
[1;32m    570[0m [43m        [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m,[49m
[1;32m    571[0m [43m        [49m[43mnetcdf_vars[49m[38;5;241;43m=[39;49m[43mnetcdf_vars[49m[43m,[49m
[1;32m    572[0m [43m        [49m[43mnodata[49m[38;5;241;43m=[39;49m[43mnodata[49m[43m,[49m
[1;32m    573[0m [43m        [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m,[49m
[1;32m    574[0m [43m    [49m[43m)[49m
[1;32m    576[0m [38;5;28;01melse[39;00m:
[1;32m    577[0m     [38;5;28;01mif[39;00m [38;5;124m'[39m[38;5;124mchunks[39m[38;5;124m'[39m [38;5;129;01min[39;00m kwargs [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(
[1;32m    578[0m         kwargs[[38;5;124m'[39m[38;5;124mchunks[39m[38;5;124m'[39m], [38;5;28mdict[39m
[1;32m    579[0m     ):

File [0;32m~/miniconda3/envs/pygisbookgw/lib/python3.9/site-packages/geowombat/backends/xarray_.py:308[0m, in [0;36mwarp_open[0;34m(filename, band_names, resampling, dtype, netcdf_vars, nodata, return_windows, warp_mem_limit, num_threads, tap, **kwargs)[0m
[1;32m    291[0m     warped_objects [38;5;241m=[39m warp_images(
[1;32m    292[0m         filenames, resampling[38;5;241m=[39mresampling, [38;5;241m*[39m[38;5;241m*[39mref_kwargs_netcdf_stack
[1;32m    293[0m     )
[1;32m    295[0m     [38;5;28;01myield[39;00m xr[38;5;241m.[39mconcat(
[1;32m    296[0m         (
[1;32m    297[0m             open_rasterio(
[0;32m   (...)[0m
[1;32m    304[0m         dim[38;5;241m=[39m[38;5;124m'[39m[38;5;124mband[39m[38;5;124m'[39m,
[1;32m    305[0m     )
[1;32m    307[0m [38;5;28;01mwith[39;00m open_rasterio(
[0;32m--> 308[0m     [43mwarp[49m[43m([49m[43mfilename[49m[43m,[49m[43m [49m[43mresampling[49m[38;5;241;43m=[39;49m[43mresampling[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mref_kwargs[49m[43m)[49m,
[1;32m    309[0m     nodata[38;5;241m=[39mref_kwargs[[38;5;124m'[39m[38;5;124mnodata[39m[38;5;124m'[39m],
[1;32m    310[0m     [38;5;241m*[39m[38;5;241m*[39mkwargs,
[1;32m    311[0m ) [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m filenames [38;5;28;01melse[39;00m warp_netcdf_vars() [38;5;28;01mas[39;00m src:
[1;32m    312[0m     [38;5;28;01mif[39;00m band_names:
[1;32m    313[0m         [38;5;28;01mif[39;00m [38;5;28mlen[39m(band_names) [38;5;241m>[39m src[38;5;241m.[39mgw[38;5;241m.[39mnbands:

File [0;32m~/miniconda3/envs/pygisbookgw/lib/python3.9/site-packages/geowombat/backends/rasterio_.py:843[0m, in [0;36mwarp[0;34m(filename, resampling, bounds, crs, res, nodata, warp_mem_limit, num_threads, tap, tac)[0m
[1;32m    824[0m             dst_transform, dst_width, dst_height [38;5;241m=[39m aligned_target(
[1;32m    825[0m                 dst_transform, dst_width, dst_height, dst_res
[1;32m    826[0m             )
[1;32m    828[0m         vrt_options [38;5;241m=[39m {
[1;32m    829[0m             [38;5;124m'[39m[38;5;124mresampling[39m[38;5;124m'[39m: [38;5;28mgetattr[39m(Resampling, resampling),
[1;32m    830[0m             [38;5;124m'[39m[38;5;124msrc_crs[39m[38;5;124m'[39m: src_crs,
[0;32m   (...)[0m
[1;32m    841[0m             },
[1;32m    842[0m         }
[0;32m--> 843[0m         output [38;5;241m=[39m [43mWarpedVRT[49m[43m([49m[43msrc[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mvrt_options[49m[43m)[49m
[1;32m    845[0m [38;5;28;01mreturn[39;00m output

File [0;32mrasterio/_warp.pyx:1087[0m, in [0;36mrasterio._warp.WarpedVRTReaderBase.__init__[0;34m()[0m

[0;31mRuntimeError[0m: Parameterization error

