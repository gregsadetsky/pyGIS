Traceback (most recent call last):
  File "/home/mmann1123/miniconda3/envs/pygis2/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/mmann1123/miniconda3/envs/pygis2/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/mmann1123/miniconda3/envs/pygis2/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/mmann1123/miniconda3/envs/pygis2/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/home/mmann1123/miniconda3/envs/pygis2/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/mmann1123/miniconda3/envs/pygis2/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/mmann1123/miniconda3/envs/pygis2/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/mmann1123/miniconda3/envs/pygis2/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Access shapefile of Virginia census tracts
va_tract = gpd.read_file("https://www2.census.gov/geo/tiger/TIGER2019/TRACT/tl_2019_51_tract.zip")

# Reproject shapefile to UTM Zone 17N
# https://spatialreference.org/ref/epsg/wgs-84-utm-zone-17n/
va_tract = va_tract.to_crs(epsg = 32617)

# Print GeoDataFrame of shapefile
print(va_tract.head(2))
print('Shape: ', va_tract.shape)

# Check shapefile projection
print("\nThe shapefile projection is: {}".format(va_tract.crs))
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyboardInterrupt[0m                         Traceback (most recent call last)
Cell [0;32mIn[6], line 2[0m
[1;32m      1[0m [38;5;66;03m# Access shapefile of Virginia census tracts[39;00m
[0;32m----> 2[0m va_tract [38;5;241m=[39m [43mgpd[49m[38;5;241;43m.[39;49m[43mread_file[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mhttps://www2.census.gov/geo/tiger/TIGER2019/TRACT/tl_2019_51_tract.zip[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m      4[0m [38;5;66;03m# Reproject shapefile to UTM Zone 17N[39;00m
[1;32m      5[0m [38;5;66;03m# https://spatialreference.org/ref/epsg/wgs-84-utm-zone-17n/[39;00m
[1;32m      6[0m va_tract [38;5;241m=[39m va_tract[38;5;241m.[39mto_crs(epsg [38;5;241m=[39m [38;5;241m32617[39m)

File [0;32m~/miniconda3/envs/pygis2/lib/python3.10/site-packages/geopandas/io/file.py:259[0m, in [0;36m_read_file[0;34m(filename, bbox, mask, rows, engine, **kwargs)[0m
[1;32m    256[0m     path_or_bytes [38;5;241m=[39m filename
[1;32m    258[0m [38;5;28;01mif[39;00m engine [38;5;241m==[39m [38;5;124m"[39m[38;5;124mfiona[39m[38;5;124m"[39m:
[0;32m--> 259[0m     [38;5;28;01mreturn[39;00m [43m_read_file_fiona[49m[43m([49m
[1;32m    260[0m [43m        [49m[43mpath_or_bytes[49m[43m,[49m[43m [49m[43mfrom_bytes[49m[43m,[49m[43m [49m[43mbbox[49m[38;5;241;43m=[39;49m[43mbbox[49m[43m,[49m[43m [49m[43mmask[49m[38;5;241;43m=[39;49m[43mmask[49m[43m,[49m[43m [49m[43mrows[49m[38;5;241;43m=[39;49m[43mrows[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m
[1;32m    261[0m [43m    [49m[43m)[49m
[1;32m    262[0m [38;5;28;01melif[39;00m engine [38;5;241m==[39m [38;5;124m"[39m[38;5;124mpyogrio[39m[38;5;124m"[39m:
[1;32m    263[0m     [38;5;28;01mreturn[39;00m _read_file_pyogrio(
[1;32m    264[0m         path_or_bytes, bbox[38;5;241m=[39mbbox, mask[38;5;241m=[39mmask, rows[38;5;241m=[39mrows, [38;5;241m*[39m[38;5;241m*[39mkwargs
[1;32m    265[0m     )

File [0;32m~/miniconda3/envs/pygis2/lib/python3.10/site-packages/geopandas/io/file.py:360[0m, in [0;36m_read_file_fiona[0;34m(path_or_bytes, from_bytes, bbox, mask, rows, where, **kwargs)[0m
[1;32m    356[0m     df [38;5;241m=[39m pd[38;5;241m.[39mDataFrame(
[1;32m    357[0m         [record[[38;5;124m"[39m[38;5;124mproperties[39m[38;5;124m"[39m] [38;5;28;01mfor[39;00m record [38;5;129;01min[39;00m f_filt], columns[38;5;241m=[39mcolumns
[1;32m    358[0m     )
[1;32m    359[0m [38;5;28;01melse[39;00m:
[0;32m--> 360[0m     df [38;5;241m=[39m [43mGeoDataFrame[49m[38;5;241;43m.[39;49m[43mfrom_features[49m[43m([49m
[1;32m    361[0m [43m        [49m[43mf_filt[49m[43m,[49m[43m [49m[43mcrs[49m[38;5;241;43m=[39;49m[43mcrs[49m[43m,[49m[43m [49m[43mcolumns[49m[38;5;241;43m=[39;49m[43mcolumns[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mgeometry[39;49m[38;5;124;43m"[39;49m[43m][49m
[1;32m    362[0m [43m    [49m[43m)[49m
[1;32m    363[0m [38;5;28;01mfor[39;00m k [38;5;129;01min[39;00m datetime_fields:
[1;32m    364[0m     as_dt [38;5;241m=[39m pd[38;5;241m.[39mto_datetime(df[k], errors[38;5;241m=[39m[38;5;124m"[39m[38;5;124mignore[39m[38;5;124m"[39m)

File [0;32m~/miniconda3/envs/pygis2/lib/python3.10/site-packages/geopandas/geodataframe.py:630[0m, in [0;36mGeoDataFrame.from_features[0;34m(cls, features, crs, columns)[0m
[1;32m    627[0m     features_lst [38;5;241m=[39m features
[1;32m    629[0m rows [38;5;241m=[39m []
[0;32m--> 630[0m [38;5;28;01mfor[39;00m feature [38;5;129;01min[39;00m features_lst:
[1;32m    631[0m     [38;5;66;03m# load geometry[39;00m
[1;32m    632[0m     [38;5;28;01mif[39;00m [38;5;28mhasattr[39m(feature, [38;5;124m"[39m[38;5;124m__geo_interface__[39m[38;5;124m"[39m):
[1;32m    633[0m         feature [38;5;241m=[39m feature[38;5;241m.[39m__geo_interface__

File [0;32mfiona/ogrext.pyx:1745[0m, in [0;36mfiona.ogrext.Iterator.__next__[0;34m()[0m

File [0;32m~/miniconda3/envs/pygis2/lib/python3.10/site-packages/fiona/collection.py:268[0m, in [0;36mCollection.driver[0;34m(self)[0m
[1;32m    265[0m         [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mmode [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m supported_drivers[driver]:
[1;32m    266[0m             [38;5;28;01mraise[39;00m DriverError([38;5;124m"[39m[38;5;124munsupported mode: [39m[38;5;132;01m%r[39;00m[38;5;124m"[39m [38;5;241m%[39m [38;5;28mself[39m[38;5;241m.[39mmode)
[0;32m--> 268[0m [38;5;129m@property[39m
[1;32m    269[0m [38;5;28;01mdef[39;00m [38;5;21mdriver[39m([38;5;28mself[39m):
[1;32m    270[0m [38;5;250m    [39m[38;5;124;03m"""Returns the name of the proper OGR driver."""[39;00m
[1;32m    271[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39m_driver [38;5;129;01mand[39;00m [38;5;28mself[39m[38;5;241m.[39mmode [38;5;129;01min[39;00m ([38;5;124m"[39m[38;5;124ma[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mr[39m[38;5;124m"[39m) [38;5;129;01mand[39;00m [38;5;28mself[39m[38;5;241m.[39msession:

[0;31mKeyboardInterrupt[0m: 
KeyboardInterrupt: 

